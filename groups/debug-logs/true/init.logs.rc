# ----------------- BEGIN MIX-IN DEFINITIONS -----------------
# Mix-In definitions are auto-generated by mixin-update
##############################################################
# Source: device/intel/mixins/groups/debug-logs/true/init.logs.rc
##############################################################
on post-fs-data
    mkdir /data/logs 0770 system log

on property:persist.service.aplogfs.enable=0
    stop vendor.ap_logfs

on property:persist.service.aplogfs.enable=1
    setprop persist.service.apklogfs.enable 0
    restart vendor.ap_log_srv

on property:persist.service.apklogfs.enable=0
    stop vendor.apk_logfs

on property:persist.service.apklogfs.enable=1
    setprop persist.service.aplogfs.enable 0
    restart vendor.ap_log_srv

service vendor.apk_logfs /vendor/bin/logcat_ep.sh auto \
        -b main -b system -b radio -b events -b crash -b kernel \
        -v threadtime -f /data/logs/aplog
    user root
    group root log
    disabled

service vendor.ap_logfs /vendor/bin/logcat_ep.sh auto \
        -b main -b system -b radio -b events -b crash \
        -v threadtime -f /data/logs/aplog
    user root
    group root log
    disabled

# Service called at boot time after data is decrypted
#
# This is done through the late_start class or through persist properties
# that are only available after data is decrypted.
# The service may be called again when the properties are updated.
service vendor.ap_log_srv /vendor/bin/start_log_srv.sh
    user root
    group root log
    class late_start
    oneshot

service vendor.earlylogs /vendor/bin/elogs.sh
    class core
    oneshot

on nonencrypted
    stop vendor.earlylogs

on property:vold.decrypt=trigger_restart_framework
    stop vendor.earlylogs

on property:persist.service.elogs.enable=1
    mkdir /cache/elogs 0770 system log
    restorecon /cache/elogs

on property:persist.service.elogs.enable=0
    exec -- /system/bin/rm -rf /cache/elogs
# ------------------ END MIX-IN DEFINITIONS ------------------
