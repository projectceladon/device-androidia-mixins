# This file describe the commands needed to flash the board.
# it is used to generate a json file for PhoneFlashTool, and
# also to generate a script for the USB thumb drive installer.

# there are 4 types of sections:
# [output.xxx.yy] : tell the script to generate a file named xxx.yyy
# [configuration.xxx] : add a new configuration in the PhoneFlashTool droplist
#     each configuration defines the list of sets of commands.
#     each command sets will be executed in the order they are in this file.
#     for a configuration to be embeded in a json output file, it must
#     be present in the "configurations" list of it
# [command.xxxx.yyyy] : add a new command yyyy to the command set xxxxx
#     so if a configuration has sets = "format reboot" then all commands
#     [command.format.yyy] will be executed, followed by all [command.reboot.yyy]
#     if the command requires a file to be passed, you can use $my_file in the args
#     and then my_file = src:filename where src is the location of the file at
#     build time (provdatazip, image, ...).
# [group.xxxx] : add a checkbox in PFT UI, to enable/disable all commands
#     which are member of this group. the default can be overriden in a configuration
#     by setting override-xxxx = true or false.


[global]
# if you need additional files in the flashfiles.zip.
# additional-files += radio:dediprog.bin
{{#bts}}
additional-files += provdatazip:btsdata.ini
{{/bts}}
{{#firmware_info}}
additional-files += provdatazip:firmware-info.txt
{{/firmware_info}}

[output.flash.json]
fastboot-command-options += timeout={{timeout}} retry={{retry}} mandatory=true
enable = true
version = {{version}}
configurations += update blank

[output.installer.cmd]
sets = unlock partition bootloader erase format flash configure{{#slot-ab}} slot-ab{{/slot-ab}} lock reboot
additional-files += provdatazip:installer.efi provdatazip:startup.nsh{{^slot-ab}} images:cache.img{{/slot-ab}} provdatazip:efivar_oemlock provdatazip:unlock_device.nsh provdatazip:config.img provdatazip:factory.img
enable = {{{installer}}}

[configuration.update]
startState = pos
sets = unlock bootloader flash capsule{{#slot-ab}} slot-ab{{/slot-ab}} lock reboot
default = true
description = update device to new release
brief = update

[configuration.blank]
startState = pos
#sets = fw_update bootstrap unlock partition bootloader erase format flash capsule configure{{#slot-ab}} slot-ab{{/slot-ab}} lock reboot
sets = unlock partition bootloader reboot-bootloader erase format flash configure{{#slot-ab}} slot-ab{{/slot-ab}} lock reboot
description = erase and flash all partitions, all data will be lost.
brief = blank

{{#capsule}}
[group.delete-capsule]
name = Disable capsule update
description = Disable capsule update by deleting the capsule file from the ESP partition
default = false
{{/capsule}}

{{#fastboot_min_battery_level}}
[output.flash.json]
fastboot-command-preconditions += battery

[parameter.battery]
name = battery
type = variable
tool = fastboot
arg = getvar battery-voltage
description = Fetch battery
computedValue = $1
filter = battery-voltage:[\s]*([0-9]+)mV
value = {{fastboot_min_battery_level}}

# The command.battery will be called before each fastboot command to get the battery level
[group.check-battery]
name = Check battery level
description = Check battery level before sending fastboot command
default = true

[command.battery]
tool = setVariable
variable = battery
description = Get battery level
group = check-battery
mandatory = false
defaultValue = {{fastboot_min_battery_level}}

# The precondition.battery will be checked before each fastboot command to ensure that battery
# level is above the specified threshold
[precondition.battery]
tool = fastboot
exception = bootstrap
description = Check battery level: ${battery}mV
expression = ${battery} >= {{fastboot_min_battery_level}}
skipOnFailure = false
{{/fastboot_min_battery_level}}
[command.unlock.unlock]
tool = fastboot
args = flashing unlock
description = Set device state to unlocked

[command.erase.misc]
tool = fastboot
args = erase misc
description = Erase misc partition

[command.erase.persistent]
tool = fastboot
args = erase persistent
description = Erase persistent partition

[command.erase.metadata]
tool = fastboot
args = erase metadata
description = Erase metadata partition

[command.erase.teedata]
tool = fastboot
args = erase teedata
description = Erase teedata partition

[group.erase-efivars]
name = Erase efi vars
description = Erase all optional efi vars
default = true

[command.erase-efivars.efivars]
tool = fastboot
args = oem erase-efivars
description = Erase all optional efi vars
group = erase-efivars

[command.partition.gpt]
tool = fastboot
args = flash gpt $file
file = provdatazip:gpt.bin
description = Initialize the partition table

{{#bootloader}}
{{^bootloader_slot_ab}}
[command.bootloader.bootloader]
tool = fastboot
args = flash bootloader $file
file = radio:bootloader.img
description = Flash bootloader partition
{{/bootloader_slot_ab}}

{{#bootloader_slot_ab}}
[command.bootloader.esp]
tool = fastboot
args = flash esp $file
file = radio:esp.img
description = Flash esp partition

[command.bootloader.bootloader_a]
tool = fastboot
args = flash bootloader_a $file
file = radio:bootloader.img
description = Flash bootloader_a partition

{{#flash_slot_b}}
[command.bootloader.bootloader_b]
tool = fastboot
args = flash bootloader_b $file
file = radio:bootloader.img
description = Flash bootloader_b partition
{{/flash_slot_b}}
{{/bootloader_slot_ab}}
{{/bootloader}}

{{^slot-ab}}
[command.format.cache]
tool = fastboot
args = format cache
description = Format cache partition
{{/slot-ab}}


{{#avb}}
{{^slot-ab}}
[command.flash.vbmeta]
tool = fastboot
args = flash vbmeta $file
file = images:vbmeta.img
description = Flash vbmeta partition
{{/slot-ab}}
{{#slot-ab}}
[command.flash.vbmeta_a]
tool = fastboot
args = flash vbmeta_a $file
file = images:vbmeta.img
description = Flash vbmeta_a partition
{{#flash_slot_b}}
[command.flash.vbmeta_b]
tool = fastboot
args = flash vbmeta_b $file
file = images:vbmeta.img
description = Flash vbmeta_b partition
{{/flash_slot_b}}
{{/slot-ab}}
{{/avb}}


{{#trusty}}
{{^slot-ab}}
[command.flash.tos]
tool = fastboot
args = flash tos $file
file = radio:tos.img
description = Flash tos partition
{{/slot-ab}}
{{#slot-ab}}
[command.flash.tos_a]
tool = fastboot
args = flash tos_a $file
file = radio:tos.img
description = Flash tos_a partition
{{#flash_slot_b}}
[command.flash.tos_b]
tool = fastboot
args = flash tos_b $file
file = radio:tos.img
description = Flash tos_b partition
{{/flash_slot_b}}
{{/slot-ab}}
{{/trusty}}


{{^slot-ab}}
[command.flash.boot]
tool = fastboot
args = flash boot $file
file = boot:boot:boot.img
description = Flash boot partition
{{/slot-ab}}
{{#slot-ab}}
[command.flash.boot_a]
tool = fastboot
args = flash boot_a $file
file = boot:boot:boot.img
description = Flash boot_a partition
{{#flash_slot_b}}
[command.flash.boot_b]
tool = fastboot
args = flash boot_b $file
file = boot:boot:boot.img
description = Flash boot_b partition
{{/flash_slot_b}}
{{/slot-ab}}


{{^slot-ab}}
[command.flash.recovery]
tool = fastboot
args = flash recovery $file
file = boot:recovery:recovery.img
description = Flash recovery partition
{{/slot-ab}}


{{^slot-ab}}
[command.flash.system]
tool = fastboot
args = flash system $file
file = images:system.img
timeout = 600000
description = Flash system partition
{{/slot-ab}}
{{#slot-ab}}
[command.flash.system_a]
tool = fastboot
args = flash system_a $file
file = images:system.img
timeout = 600000
description = Flash system_a partition
{{#flash_slot_b}}
[command.flash.system_b]
tool = fastboot
args = flash system_b $file
file = images:system.img
timeout = 600000
description = Flash system_b partition
{{/flash_slot_b}}
{{/slot-ab}}


{{#vendor-partition}}
{{^slot-ab}}
[command.flash.vendor]
tool = fastboot
args = flash vendor $file
file = images:vendor.img
timeout = 600000
description = Flash vendor partition
{{/slot-ab}}
{{#slot-ab}}
[command.flash.vendor_a]
tool = fastboot
args = flash vendor_a $file
file = images:vendor.img
timeout = 600000
description = Flash vendor_a partition
{{#flash_slot_b}}
[command.flash.vendor_b]
tool = fastboot
args = flash vendor_b $file
file = images:vendor.img
timeout = 600000
description = Flash vendor_b partition
{{/flash_slot_b}}
{{/slot-ab}}
{{/vendor-partition}}


{{#factory-partition}}
[command.flash.factory]
tool = fastboot
args = flash factory $file
file = radio:factory.img
timeout = 600000
description = Flash factory partition
{{/factory-partition}}


{{#config-partition}}
[command.flash.config]
tool = fastboot
args = flash config $file
file = radio:config.img
timeout = 600000
description = Flash config partition
{{/config-partition}}


{{#capsule}}
[command.capsule.rm-capsule]
tool = fastboot
args = oem rm /ESP/BIOSUPDATE.FV
group = delete-capsule
description = Delete firmware capsule
{{/capsule}}

{{#oemvars}}
[command.configure.oemvars]
tool = fastboot
args = flash oemvars $file
file = provdatazip:oemvars.txt
description = Set OEM variables
{{/oemvars}}

[command.format.data]
tool = fastboot
args = format data
description = Format data partition

# This will reset the setting of slot B
{{#slot-ab}}
{{#flash_slot_b}}
[command.slot-ab.set-active-b]
tool = fastboot
args = set_active b
description = Set the active slot to B
{{/flash_slot_b}}
{{/slot-ab}}

{{#slot-ab}}
[command.slot-ab.set-active-a]
tool = fastboot
args = set_active a
description = Set the active slot to A
{{/slot-ab}}

[group.lock-device]
name = Lock the device (it implies the userdata partition wipe)
description = Put the device in locked state at the end of the flash procedure.
default = true

[command.lock.lock]
tool = fastboot
args = flashing lock
group = lock-device
description = Set device state to locked

[command.reboot.continue]
tool = fastboot
args = {{reboot}}
description = Boot to main OS

[command.reboot-bootloader.reboot]
tool = fastboot
args = reboot bootloader
description = Boot to bootloader
