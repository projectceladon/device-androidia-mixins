# This file describe the commands needed to flash the board.
# it is used to generate a json file for PhoneFlashTool, and
# also to generate a script for the USB thumb drive installer.

# there are 4 types of sections:
# [output.xxx.yy] : tell the script to generate a file named xxx.yyy
# [configuration.xxx] : add a new configuration in the PhoneFlashTool droplist
#     each configuration defines the list of sets of commands.
#     each command sets will be executed in the order they are in this file.
#     for a configuration to be embeded in a json output file, it must
#     be present in the "configurations" list of it
# [command.xxxx.yyyy] : add a new command yyyy to the command set xxxxx
#     so if a configuration has sets = "format reboot" then all commands
#     [command.format.yyy] will be executed, followed by all [command.reboot.yyy]
#     if the command requires a file to be passed, you can use $my_file in the args
#     and then my_file = src:filename where src is the location of the file at
#     build time (provdatazip, image, ...).
# [group.xxxx] : add a checkbox in PFT UI, to enable/disable all commands
#     which are member of this group. the default can be overriden in a configuration
#     by setting override-xxxx = true or false.


[global]
# if you need additional files in the flashfiles.zip.
# additional-files += radio:dediprog.bin
{{#bts}}
additional-files += provdatazip:btsdata.ini
{{/bts}}
{{#firmware_info}}
additional-files += provdatazip:firmware-info.txt
{{/firmware_info}}

[output.flash.json]
fastboot-command-options += timeout={{timeout}} retry={{retry}} mandatory=true
enable = true
version = {{version}}
{{^mfgos}}
configurations += update blank
{{/mfgos}}

[output.installer.cmd]
{{^dynamic-partitions}}
sets = unlock partition {{#bootloader}}bootloader {{/bootloader}}erase format flash configure lock reboot
{{/dynamic-partitions}}
{{#dynamic-partitions}}
{{#super_img_in_flashzip}}
sets = unlock partition {{#bootloader}}bootloader {{/bootloader}}erase format flash configure lock reboot
{{/super_img_in_flashzip}}
{{^super_img_in_flashzip}}
sets = unlock partition {{#bootloader}}bootloader {{/bootloader}}erase format flash configure reboot2usfb
{{/super_img_in_flashzip}}
{{/dynamic-partitions}}
additional-files += provdatazip:installer.efi provdatazip:startup.nsh{{^slot-ab}} images:cache.img{{/slot-ab}} provdatazip:LICENSE provdatazip:start_android_qcow2.sh provdatazip:start_flash_usb.sh provdatazip:auto_switch_pt_usb_vms.sh provdatazip:findall.py provdatazip:setup_host.sh
enable = {{{installer}}}

{{^mfgos}}
[configuration.update]
startState = pos
sets = unlock {{#bootloader}}bootloader {{/bootloader}}{{#slot-ab}} slot-ab{{/slot-ab}} flash{{#dynamic-partitions}}{{^super_img_in_flashzip}} reboot2usfb dynamic_part usfb_flash reboot2blfb{{/super_img_in_flashzip}}{{/dynamic-partitions}} capsule lock reboot
default = true
description = update phone to new release
brief = update

{{#flash_dnx_os}}
[configuration.blank]
startState = dnx_os
sets = fw_update bootstrap unlock partition {{#bootloader}}bootloader {{/bootloader}}erase format flash{{#dynamic-partitions}}{{^super_img_in_flashzip}} reboot2usfb dynamic_part usfb_flash reboot2blfb{{/super_img_in_flashzip}}{{/dynamic-partitions}} capsule configure{{#slot-ab}} slot-ab{{/slot-ab}} lock reboot
description = erase and flash all partitions, all data will be lost.
brief = blank
{{/flash_dnx_os}}
{{^flash_dnx_os}}
[configuration.blank]
startState = pos
{{#blank_no_fw}}
sets = unlock partition {{#bootloader}}bootloader {{/bootloader}}erase format flash{{#dynamic-partitions}}{{^super_img_in_flashzip}} reboot2usfb dynamic_part usfb_flash reboot2blfb{{/super_img_in_flashzip}}{{/dynamic-partitions}} capsule configure{{#slot-ab}} slot-ab{{/slot-ab}} lock reboot
{{/blank_no_fw}}
{{^blank_no_fw}}
sets = fw_update unlock bootstrap partition {{#bootloader}}bootloader {{/bootloader}}erase format flash{{#dynamic-partitions}}{{^super_img_in_flashzip}} reboot2usfb dynamic_part usfb_flash reboot2blfb{{/super_img_in_flashzip}}{{/dynamic-partitions}} capsule configure{{#slot-ab}} slot-ab{{/slot-ab}} lock reboot
{{/blank_no_fw}}
description = erase and flash all partitions, all data will be lost.
brief = blank
{{/flash_dnx_os}}

[configuration.update_without_lock]
startState = pos
sets = unlock {{#bootloader}}bootloader {{/bootloader}}{{#slot-ab}} slot-ab{{/slot-ab}} flash{{#dynamic-partitions}}{{^super_img_in_flashzip}} reboot2usfb dynamic_part usfb_flash reboot2blfb{{/super_img_in_flashzip}}{{/dynamic-partitions}} capsule reboot
description = update phone to new release
brief = update_without_lock

{{#flash_dnx_os}}
[configuration.blank_without_lock]
startState = dnx_os
sets = fw_update bootstrap unlock partition {{#bootloader}}bootloader {{/bootloader}}erase format flash{{#dynamic-partitions}}{{^super_img_in_flashzip}} reboot2usfb dynamic_part usfb_flash reboot2blfb{{/super_img_in_flashzip}}{{/dynamic-partitions}} capsule configure{{#slot-ab}} slot-ab{{/slot-ab}} reboot
description = erase and flash all partitions, all data will be lost.
brief = blank_without_lock
{{/flash_dnx_os}}
{{^flash_dnx_os}}
[configuration.blank_without_lock]
startState = pos
{{#blank_no_fw}}
sets = unlock partition {{#bootloader}}bootloader {{/bootloader}}erase format flash{{#dynamic-partitions}}{{^super_img_in_flashzip}} reboot2usfb dynamic_part usfb_flash reboot2blfb{{/super_img_in_flashzip}}{{/dynamic-partitions}} capsule configure{{#slot-ab}} slot-ab{{/slot-ab}} reboot
{{/blank_no_fw}}
{{^blank_no_fw}}
sets = fw_update unlock bootstrap partition {{#bootloader}}bootloader {{/bootloader}}erase format flash{{#dynamic-partitions}}{{^super_img_in_flashzip}} reboot2usfb dynamic_part usfb_flash reboot2blfb{{/super_img_in_flashzip}}{{/dynamic-partitions}} capsule configure{{#slot-ab}} slot-ab{{/slot-ab}} reboot
{{/blank_no_fw}}
description = erase and flash all partitions, all data will be lost.
brief = blank_without_lock
{{/flash_dnx_os}}
{{/mfgos}}

{{#capsule}}
[group.delete-capsule]
name = Disable capsule update
description = Disable capsule update by deleting the capsule file from the ESP partition
default = false
{{/capsule}}

{{#fastboot_min_battery_level}}
[output.flash.json]
fastboot-command-preconditions += battery

[parameter.battery]
name = battery
type = variable
tool = fastboot
arg = getvar battery-voltage
description = Fetch battery
computedValue = $1
filter = battery-voltage:[\s]*([0-9]+)mV
value = {{fastboot_min_battery_level}}

# The command.battery will be called before each fastboot command to get the battery level
[group.check-battery]
name = Check battery level
description = Check battery level before sending fastboot command
default = true

[command.battery]
tool = setVariable
variable = battery
description = Get battery level
group = check-battery
mandatory = false
defaultValue = {{fastboot_min_battery_level}}

# The precondition.battery will be checked before each fastboot command to ensure that battery
# level is above the specified threshold
[precondition.battery]
tool = fastboot
exception = bootstrap
description = Check battery level: ${battery}mV
expression = ${battery} >= {{fastboot_min_battery_level}}
skipOnFailure = false

{{/fastboot_min_battery_level}}
{{#slot-ab}}
[parameter.slot]
name = slot
type = variable
tool = fastboot
arg = getvar current-slot
description = Get current slot
computedValue = $1
filter = current-slot:[\s]*(_[a-z]+)
value = a

[command.slot-ab.get-active]
tool = setVariable
variable = slot
description = Get the active slot
defaultValue = a
mandatory = false

[command.slot-ab.set-active]
tool = fastboot
args = --set-active=${slot}
description = Set the active slot

{{/slot-ab}}
[command.unlock.unlock]
tool = fastboot
args = flashing unlock
{{#acrn-guest}}
timeout = 180000
{{/acrn-guest}}
{{^acrn-guest}}
timeout = 3600000
{{/acrn-guest}}
description = Set device state to unlocked

{{^mfgos}}
[command.erase.misc]
tool = fastboot
args = erase misc
description = Erase misc partition

[command.erase.persistent]
tool = fastboot
args = erase persistent
description = Erase persistent partition

[command.erase.metadata]
tool = fastboot
args = erase metadata
description = Erase metadata partition

{{^slot-ab}}
[command.format.cache]
tool = fastboot
args = format cache
description = Format cache partition
{{/slot-ab}}

{{^slot-ab}}
[command.flash.boot]
tool = fastboot
args = flash boot $file
file = boot:boot:boot.img
description = Flash boot partition
{{/slot-ab}}
{{#slot-ab}}
[command.flash.boot]
tool = fastboot
args = flash boot_a $file
file = boot:boot:boot.img
description = Flash boot_a partition
{{/slot-ab}}

{{^slot-ab}}
[command.flash.recovery]
tool = fastboot
args = flash recovery $file
file = boot:recovery:recovery.img
description = Flash recovery partition
{{/slot-ab}}

{{#dynamic-partitions}}
{{#super_img_in_flashzip}}
[command.flash.super]
tool = fastboot
args = flash super $file
file = images:super.img
timeout = 600000
description = Flash super partition

[global]
additional-files += images:system.img
{{/super_img_in_flashzip}}
{{/dynamic-partitions}}

{{^slot-ab}}
[command.{{^dynamic-partitions}}flash{{/dynamic-partitions}}{{#dynamic-partitions}}usfb_flash{{/dynamic-partitions}}.system]
tool = fastboot
args = flash system $file
file = images:system.img
timeout = 600000
description = Flash system partition
{{/slot-ab}}
{{#slot-ab}}
[command.{{^dynamic-partitions}}flash{{/dynamic-partitions}}{{#dynamic-partitions}}usfb_flash{{/dynamic-partitions}}.system]
tool = fastboot
args = flash system_a $file
file = images:system.img
timeout = 600000
description = Flash system_a partition
{{/slot-ab}}

{{#dynamic-partitions}}
[command.reboot2usfb.reboot]
tool = fastboot
args = reboot-fastboot
description = Reboot to user space fastboot

[command.dynamic_part.super]
tool = fastboot
args = wipe-super $file
file = images:super_empty.img
timeout = 600000
description = Wipe super partition

[command.reboot2blfb.reboot]
tool = fastboot
args = reboot bootloader
description = Reboot to bootloader fastboot
{{/dynamic-partitions}}

{{#bootloader}}
{{^bootloader_slot_ab}}
[command.bootloader.bootloader]
tool = fastboot
args = flash bootloader $file
file = bootloader:bootloader.img
description = Flash bootloader partition

{{/bootloader_slot_ab}}
{{/bootloader}}

{{#bootloader_slot_ab}}
[command.bootloader.esp]
tool = fastboot
args = flash esp $file
file = radio:esp.img
description = Flash esp partition

[command.bootloader.bootloader_a]
tool = fastboot
args = flash bootloader_a $file
file = radio:bootloader.img
description = Flash bootloader_a partition

{{/bootloader_slot_ab}}
{{#capsule}}
[command.capsule.rm-capsule]
tool = fastboot
args = oem rm /ESP/BIOSUPDATE.FV
group = delete-capsule
description = Delete firmware capsule
{{/capsule}}

{{#oemvars}}
[command.configure.oemvars]
tool = fastboot
args = flash oemvars $file
file = provdatazip:oemvars.txt
description = Set OEM variables
{{/oemvars}}

[command.format.data]
tool = fastboot
args = format{{#data_use_f2fs}}:f2fs{{/data_use_f2fs}} {{^dynamic-partitions}}data{{/dynamic-partitions}}{{#dynamic-partitions}}userdata{{/dynamic-partitions}}
description = Format {{^dynamic-partitions}}data{{/dynamic-partitions}}{{#dynamic-partitions}}userdata{{/dynamic-partitions}} partition
{{/mfgos}}

[group.lock-device]
name = Lock the device (it implies the userdata partition wipe)
description = Put the device in locked state at the end of the flash procedure.
default = true

[command.lock.lock]
tool = fastboot
args = flashing lock
group = lock-device
{{#acrn-guest}}
timeout = 180000
{{/acrn-guest}}
{{^acrn-guest}}
timeout = 3600000
{{/acrn-guest}}
description = Set device state to locked

[command.reboot.continue]
tool = fastboot
args = {{reboot}}
description = Boot to main OS
